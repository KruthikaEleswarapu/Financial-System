version: '3.8'

services:
  # -------------------------------
  # MySQL for Account Service
  # -------------------------------
  account-db:
    image: mysql:8
    container_name: account-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accounts
    ports:
      - "3306:3306"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -uroot -proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  # -------------------------------
  # Account Service
  # -------------------------------
  account-service:
    build: ./account-service
    container_name: account-service
    ports:
      - "8081:8081"
    depends_on:
      account-db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://account-db:3306/accounts
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    networks:
      - microservices-net
    entrypoint: >
      /bin/sh -c "
      ./wait-for-it.sh account-db:3306 --timeout=60 --
      ./mvnw spring-boot:run
      "

  # -------------------------------
  # MySQL for Transaction Service
  # -------------------------------
  transaction-db:
    image: mysql:8
    container_name: transaction-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: transactions
    ports:
      - "3307:3306"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -uroot -proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  # -------------------------------
  # Zookeeper (Kafka dependency)
  # -------------------------------
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - microservices-net

  # -------------------------------
  # Kafka Broker
  # -------------------------------
  kafka:
    image: bitnami/kafka:3.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # -------------------------------
  # Transaction Service
  # -------------------------------
  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    ports:
      - "8082:8082"
    depends_on:
      transaction-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://transaction-db:3306/transactions
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - microservices-net
    entrypoint: >
      /bin/sh -c "
      ./wait-for-it.sh transaction-db:3306 --timeout=60 --
      ./wait-for-it.sh kafka:9092 --timeout=60 --
      ./mvnw spring-boot:run
      "

networks:
  microservices-net:
    driver: bridge
